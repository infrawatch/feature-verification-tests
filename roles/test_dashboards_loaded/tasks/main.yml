---
# tasks file for roles/test_dashboards_loaded
- name: "Subscribe to the Grafana Operator"
  ansible.builtin.shell:
    cmd: |
      oc apply -f - <<EOF
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: grafana-operator
        namespace: service-telemetry
      spec:
        channel: v4
        installPlanApproval: Automatic
        name: grafana-operator
        source: community-operators
        sourceNamespace: openshift-marketplace
      EOF

  changed_when: false
  register: cmd_output
  failed_when: cmd_output.rc != 0

- name: "Manual Approve installplan"
  ansible.builtin.shell:
    cmd: |
      oc patch installplan $(oc get ip -l operators.coreos.com/grafana-operator.service-telemetry -o=jsonpath='{.items[0].metadata.name}') --type merge --patch '{"spec":{"approved":true}}'
  changed_when: false




- name: " Set graphing.enabled"
  ansible.builtin.shell:
    cmd: |
      oc apply -f - <<EOF
      apiVersion: infra.watch/v1beta1
      kind: ServiceTelemetry
      metadata:
        name: default
        namespace: service-telemetry
      spec:
        graphing:
          enabled: true
          grafana:
            ingressEnabled: true
            baseImage: 'registry.redhat.io/rhel8/grafana:7'
      EOF
  changed_when: false
  register: cmd_output
  failed_when: cmd_output.rc != 0

- name: "Wait 2 minutes to make sure all pods are running"
  ansible.builtin.pause:
    minutes: 2
  changed_when: false

- name: "Verify Grafana route exists"
  ansible.builtin.shell:
    cmd: |
      oc get route grafana-route | grep 'grafana-route' | wc -l
  changed_when: false
  register: cmd_output
  failed_when: "cmd_output.stdout|int == 0"

- name: "Import dashboards"
  ansible.builtin.shell:
    cmd: |
      oc apply -f https://raw.githubusercontent.com/infrawatch/dashboards/master/deploy/stf-1/rhos-dashboard.yaml
      oc apply -f https://raw.githubusercontent.com/infrawatch/dashboards/master/deploy/stf-1/virtual-machine-view.yaml
      oc apply -f https://raw.githubusercontent.com/infrawatch/dashboards/master/deploy/stf-1/memcached-dashboard.yaml
  changed_when: false
  register: cmd_output
  failed_when: cmd_output.rc != 0

- name: "Verify Dashboards"
  ansible.builtin.shell:
    cmd: |
      oc get grafanadashboards | grep 'virtual-machine\|memcached\|rhos'| wc -l
  changed_when: false
  register: cmd_output
  failed_when: "cmd_output.stdout|int == 0"




