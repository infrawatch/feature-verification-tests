---
- name: Convert the pod info into a dict
  ansible.builtin.set_fact:
    pod:
      name: "{{ item.name if \"name\" in item else item }}"
      nspace: "{{ item.nspace if \"nspace\" in item else common_pod_nspace }}"
      status_str: "{{ item.status_str if \"status_str\" in item else common_pod_status_str }}"
      test_id: "{{ item.test_id if \"test_id\" in item else common_pod_test_id | default(omit) }}"

- name: Show the pod details for this test
  ansible.builtin.debug:
    var: pod

- block:
      # expects that one line will be returned
      # todo: define what happens when there are multiple pods returned
    - name: Get Pod Instance name "{{ pod.status_str }}"
      ansible.builtin.shell:
        cmd: |
          oc get pods -n "{{ pod.nspace }}" | grep "{{ pod.name }}" | grep "{{ pod.status_str }}" | awk '{print $1;}'
      register: podinstance
      failed_when:
        - podinstance.stdout_lines | length != 1
      changed_when: false

    - name: |
        TEST Check {{ pod.name }} pod is {{ pod.status_str }} in {{ pod.nspace }} namespace
      ansible.builtin.command:
        cmd: |
          oc get pod -n "{{ pod.nspace }}" "{{ podinstance.stdout }}"
      register: output
      changed_when: false
      failed_when:
        - output.rc != 0
        - podinstance.stdout == ""
  rescue:
    - name: Get Pod Instance "{{ pod.name }}"
      ansible.builtin.shell:
        cmd: |
          oc get pods -n "{{ pod.nspace }}" | grep "{{ pod.name }}"
      register: podinstance
      failed_when:
        - podinstance.stdout_lines | length == 0
      changed_when: false
