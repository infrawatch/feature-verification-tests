---
- name: Set container name to a variable
  ansible.builtin.set_fact:
    container_name: "{{ item }}"

- name: Get compute node IPs
  vars:
    # NOTE there is some templating used in crc_ci_bootstrap_networking,
    # which expects a nodepool.cloud variable. This task fails if the
    # variable isn't set
    nodepool:
      cloud: placeholder
  ansible.builtin.set_fact: 
    compute_ips: "{{ crc_ci_bootstrap_networking['instances'] | select('match', '^compute') | map('extract', crc_ci_bootstrap_networking['instances']) | map(attribute='networks.default.ip') | list }}"

- name: Get container status
  ansible.builtin.shell:
    cmd: |
      ssh -i {{ cifmw_artifacts_crc_sshkey }} root@{{ ip }} podman ps -a --format \"{{ '{{.Names}} {{.Status}}' }}\" | grep {{ container_name }}
  changed_when: false
  register: container_status
  loop: "{{ compute_ips }}"
  loop_control:
    loop_var: ip

- name: Verify container status {{ common_container_test_id }}
  ansible.builtin.assert:
    that:
      - "'unhealthy' not in status.stdout"
    success_msg: "Container '{{ container_name }}' is in 'healthy' status."
    fail_msg: "Container '{{ container_name }}' is not in 'healthy' status. Current status: {{ status.stdout }}"
  loop: "{{ container_status.results }}"
  loop_control:
    loop_var: status
