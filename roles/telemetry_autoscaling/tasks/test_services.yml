---
# Verify Orchestration (heat) and telemetry services resources are ready for autoscaling

- name: Verify that custom resource HEAT is ready
  ansible.builtin.command:
    cmd: |
      oc get -n openstack heat heat -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}{"\n"}'
  register: result
  failed_when:
    - result.stdout != "True"

- name: Verify that custom resource CEILOMETER is ready
  ansible.builtin.command:
    cmd: |
      oc get -n openstack ceilometer ceilometer -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}{"\n"}'
  register: result
  failed_when:
    - result.stdout != "True"

- name: Check that the autoscaling CR is ready
  block:
    - name: Verify that custom resource AUTOSCALING is ready
      ansible.builtin.command:
        cmd: |
          oc get -n openstack autoscaling autoscaling -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}{"\n"}'
      register: result
      failed_when:
        - result.stdout != "True"
  rescue:
    - name: view autoscaling objects
      ansible.builtin.command:
        cmd: "{{ item }}"
      register: autoscaling_result
      with_items:
        - oc get -n openstack autoscaling autoscaling -oyaml
        - oc get -n openstack telemetry telemetry -oyaml
      failed_when: autoscaling_result.rc >= 1

    - name: Print the result
      ansible.builtin.debug:
        var: autoscaling_result

- name: Verify that custom resource METRICSTORAGE is ready
  ansible.builtin.command:
    cmd: |
      oc get -n openstack metricstorage metric-storage -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}{"\n"}'
  register: result
  failed_when:
    - result.stdout != "True"
