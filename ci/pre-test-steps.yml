---
- name: Run telemetry tests to verify metrics on osp18
  hosts:  "{{ cifmw_target_hook_host | default('localhost')  }}"
  gather_facts: true
  environment:
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
    PATH: "{{ cifmw_path }}:/var/lib/ansible/bin"
  vars_files:
    - vars/common.yml
    - vars/osp18_env.yml
  vars:
    cifmw_ci_setup_oc_install_path: "{{ ansible_user_dir ~ '/bin' }}" 
      # openshift client
    cifmw_ci_setup_openshift_client_download_uri: "https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp"
    cifmw_ci_setup_openshift_minimum_version: 4
    cifmw_ci_setup_openshift_client_version: 'stable-4.16'
  tasks: 
      #TODO: Add this as a common playbook so it can be added to the other tests as well.
      #- name: Install oc
      #  ansible.builtin.include_role:
      #    name: cifmw.general.ci_setup
      #    tasks_from: packages
      #  vars:
      #    cifmw_ci_setup_packages: []
      #TODO: use ci_setup one deps installation is sorted
    - name: Ensure openshift client install path is present
      ansible.builtin.file:
        path: "{{ cifmw_ci_setup_oc_install_path }}"
        state: directory
        mode: "0755"

    - name: Install openshift client
      ansible.builtin.unarchive:
        src: "{{ cifmw_ci_setup_openshift_client_download_uri }}/{{ cifmw_ci_setup_openshift_client_version }}/openshift-client-linux.tar.gz"
        dest: "{{ cifmw_ci_setup_oc_install_path }}"
        remote_src: true
        mode: "0755"
        creates: "{{ cifmw_ci_setup_oc_install_path }}/oc"

    - name: Add the OC path to cifmw_path if needed
      vars:
        _cifmw_paths_list: >-
          {{
            cifmw_path | split(':')
            if cifmw_path is defined else []
          }}
      when: cifmw_ci_setup_oc_install_path not in _cifmw_paths_list
      ansible.builtin.set_fact:
        cifmw_path: "{{ cifmw_ci_setup_oc_install_path }}:{{ ansible_env.PATH }}"
        cacheable: true
    
    - name: Inject oc completion in local profile
      block:
        - name: Create completion file
          ansible.builtin.shell:  # noqa: risky-shell-pipe
            cmd: >-
              {{ cifmw_ci_setup_oc_install_path }}/oc completion bash |
              tee -a ~/.oc_completion
            creates: "{{ ansible_user_dir }}/.oc_completion"
          no_log: true

    - name: Source completion from within .bashrc
      ansible.builtin.blockinfile:
        create: true
        mode: "0644"
        path: "{{ ansible_user_dir }}/.bashrc"
        block: |-
          if [ -f ~/.oc_completion ]; then
            source ~/.oc_completion
          fi
          
    - name: Log into openshift
      ansible.builtin.shell:
        cmd: |
          oc login -u {{ cifmw_openshift_user }} -p {{ cifmw_openshift_password }} --insecure-skip-tls-verify {{ cifmw_openshift_api }}
      register: cmd
      retries: 10
      delay: 10
      until: cmd.rc == 0


