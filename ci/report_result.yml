---
- name: "Create the output directory"
  hosts:
     - controller
  vars_files:
    - vars/common.yml
  tasks:
    - name: Create log dir
      ansible.builtin.file:
        path: "{{ logs_dir }}"
        state: directory
        mode: "0755"

- name: Check the XML file for failed tasks
  hosts: controller
  gather_facts: true
  vars_files:
    - vars/common.yml
  pre_tasks:
    - name: Stop play early if we do not want to check the failures
      when:
        - not (check_failures | default(true) | bool)
      ansible.builtin.meta: end_play
  tasks:
    - name: "Get the matching lines in the results files"
      ansible.builtin.command:
       cmd: |
         grep -r "<testsuites .*>$" {{ logs_dir }}/
      register: verbose_matches
      ignore_errors: true

    - name: "Fail if there are no XML files"
      ansible.builtin.fail:
        msg: "There were no XML files found in {{ logs_dir }}."
      when: verbose_matches.stdout_lines | length == 0

    - name: "Get the number of failed testcases"
      ansible.builtin.set_fact:
        tasks_failed: "{{ verbose_matches.stdout | regex_replace('.*failures=\"([0-9]*)\".*>', '\\1') | split('\n') | map('int') | sum }}"

      # The RC from grep is 0 if the string is matched
    - name: Fail when there's a testcase failure
      ansible.builtin.fail:
        msg: There were {{ tasks_failed }} failed testcases.
      when: tasks_failed | int > 0 and verbose_matches.rc == 0

    - name: Determine success or failure based on the number of failed tasks
      ansible.builtin.fail:
        msg: "The log file(s) contain failed task."
      when: tasks_failed | int > 0 and verbose_matches.rc == 0

      # The RC from grep is 2 if an error occurred.
    - name: Fail if the file was not found (or other grep error)
      ansible.builtin.fail:
        msg: "{{ verbose_matches.stderr if verbose_matches.stderr | length > 0 else 'There was an error with grep.' }}"
      when: verbose_matches.rc > 1
