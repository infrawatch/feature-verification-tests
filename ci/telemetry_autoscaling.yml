---
- name: Telemetry autoscaling tests
  hosts:  "{{ cifmw_target_hook_host | default('localhost')  }}"
  gather_facts: true
  vars:
    fvt_dir: "{{ ansible_env.HOME }}/src/github.com/infrawatch/feature-verification-tests"
    ci_framework_logs: "{{ ansible_env.HOME }}/ci-framework-data/logs"
    openstack_cmd: "oc rsh openstackclient openstack"
    metrics_backend: "prometheus"
    stack_image: "cirros"
    stack_flavor: "m1.small"
    stack_network: "private"
    stack_external_network: "public"
    stack_name: "vnf"
  environment:
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  tasks:      
    - name: Setup the env to run telemetry_autoscaling 
      block:
      # NOTE: tags are also temperory and should be removed later
      # this is temperory and should be replaced later by some heat stack or some ansible
        - name: Clone install_yamls repository
          git:
            repo: http://github.com/openstack-k8s-operators/install_yamls
            dest: "{{ ansible_env.HOME }}/install_yamls"
          tags:
            - setup

          # TODO: Look at replacing this with something NOT from install_yamls.
        - community.general.make:
            chdir: "{{ ansible_env.HOME }}/install_yamls/devsetup"
            target: edpm_deploy_instance
          tags:
            - setup

          # TODO: Convert this to a kustomization and pass it to the deployment
          # First step might be to use -k in the patch to pass a kustomization to oc patch
        - name: Patch the openstackversions to use the master containers for aodh and heat
          ansible.builtin.shell:
            cmd: |
              oc patch openstackversions openstack-galera-network-isolation --type merge --patch-file patch.yaml
          tags:
            - setup

          # TODO:Look for a workaround for this.
        - name: Patch observabilityclient into openstackclient
          ansible.builtin.shell:
            cmd: |
              oc exec openstackclient -- python3 -m ensurepip --upgrade
              oc exec openstackclient -- python3 -m pip install --upgrade aodhclient
              oc exec openstackclient -- python3 -m pip install --upgrade python-observabilityclient
          tags:
            - setup

        - name: Wait until the oscp is resolved the changes to continue
          ansible.builtin.shell:
            cmd: |
              oc get oscp | grep "Setup complete"
          retries: 24
          timeout: 5
          until: output.stdout_lines | length == 1
          register: output
          tags:
            - setup

    # NOTE: the tags are for testing/development, eventually, the role will just be imported, and main.yml will run through the tasks
    - import_role:
        name: telemetry_autoscaling
        tasks_from: verify_autoscaling
      tags:
        - precheck

    - import_role:
        name: telemetry_autoscaling
        tasks_from: configure_heat
      tags:
        - create

    - import_role:
        name: telemetry_autoscaling
        tasks_from: creating_stack
      tags:
        - create

    - import_role:
        name: telemetry_autoscaling
        tasks_from: test_autoscaling
      tags:
        - test

    - name: Check that the stack exists
      ansible.builtin.command:
        cmd: |
          oc rsh openstackclient openstack stack show {{ stack_name }}
      ignore_errors: true
      register: output
      tags: [never, cleanup]

    - name: Remove the stack if it exists
      ansible.builtin.command:
        cmd: |
          oc rsh openstackclient openstack stack delete {{ stack_name }}
      when: output.rc == 0
      tags:
        - never
        - cleanup

    - name: Check whether a stack already exists with the same name
      ansible.builtin.shell:
        cmd: oc rsh openstackclient openstack stack list | grep {{ stack_name }}
      register: output
      until: output.stdout_lines == 0
      ignore_errors: true
      retries: 50
      timeout: 5
      tags:
        - never
        - cleanup

      # TODO: Get the name of the openstackversions object.
      # TODO: Work on getting the patches into kustomize format, so that we can use them by passing into the job vars, and can skip setup.
      # This is so we can test it locally.
    
    - name: Revert the version update
      ansible.builtin.shell:
        cmd: |
          oc patch openstackversions openstack-galera-network-isolation --type json -p='[{"op": "replace", "path": "/spec/customContainerImages", "value": {} }]'
      tags:
        - never
        - cleanup

    - name: remove install_yamls
      ansible.builtin.command:
        cmd: |
          rm -rf {{ ansible_env.HOME }}/install_yamls
        removes: "{{ ansible_env.HOME }}/install_yamls"
      tags:
        - never
        - cleanup